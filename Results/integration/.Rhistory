plot(1:10,1:10,bty="n",col="red",pch=16,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
axis
help(axis)
plot(1:10,1:10,bty="n",col="red",pch=16,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="green" )
axis(1,0:11,labels=0:11*100,line=3,col="green",col.ticks="green",col.axis="green")
mtext("Label 2",1,line=5,at=0.2,col="green")
plot(1:10,1:10,bty="n",col="red",pch=16,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="green" )
axis(1,0:11,labels=0:11*100,line=5,col="green",col.ticks="green",col.axis="green")
mtext("Label 2",1,line=5,at=0.2,col="green")
plot(1:10,1:10,bty="n",col="red",pch=16,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="green" )
axis(1,0:11,labels=0:11*100,line=5,col="green",col.ticks="green",col.axis="green")
mtext("Label 3",1,line=5,at=0.2,col="green")
plot(1:10,1:10,bty="n",col="red",pch=12,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=12, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=12, col="green" )
axis(1,0:11,labels=0:11*100,line=5,col="green",col.ticks="green",col.axis="green")
mtext("Label 3",1,line=5,at=0.2,col="green")
plot(1:10,1:10,bty="n",col="red",pch=16,axes=FALSE,xlab="",ylab="")
axis(2,0:11,las=1)
axis(1,0:11,line=1,col="red",col.ticks="red",col.axis="red")
mtext("Label 1",1,line=1,at=0.2,col="red")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="blue" )
axis(1,0:11,labels=0:11*10,line=3,col="blue",col.ticks="blue",col.axis="blue")
mtext("Label 2",1,line=3,at=0.2,col="blue")
# Secondary points and axis:
points(rnorm(10,50,20)/10, rnorm(10,5,2),pch=16, col="green" )
axis(1,0:11,labels=0:11*100,line=5,col="green",col.ticks="green",col.axis="green")
mtext("Label 3",1,line=5,at=0.2,col="green")
install.package('StatMatch')
install.packages('StatMatch')
library(StatMatch)
for i in (1:50):
gower.dist([[i, 1, 2]]), [[31.0, 1, 2]])
[[i, 1, 2]]
as.matrix(i, 1, 2))
as.matrix(c(i, 1, 2))
for i in (1:50):
gower.dist(as.matrix(c(i, 1, 2)), c(31.0, 1, 2))
for i in (1:50){
}
for i in (1:50){
1
}
for i in (1:50){
1
}
for (i in 1:50){
1
}
as.matrix(c(i, 1, 2))
gower.dist(as.matrix(c(i, 1, 2)), as.matrix(c(31.0, 1, 2)))
gower.dist(t(as.matrix(c(i, 1, 2))), t(as.matrix(c(31.0, 1, 2))))
gg = rep(0, 50)
gg
gg = rep(0, 50)
for (i in 1:50){
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))), t(as.matrix(c(31.0, 1, 2))))
}
plot(gg)
plot(gg, type = 'l')
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))), t(as.matrix(c(31.0, 1, 2))))
gg = rep(0, 50)
for (i in 1:50){
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2)))
KR.corr = T)
}
plot(gg, type = 'l')
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2)))
KR.corr = T)
gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2))))
gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2))),
KR.corr = T)
gg = rep(0, 50)
for (i in 1:50){
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2))),
KR.corr = T)
}
plot(gg, type = 'l')
plot(gg, type)
plot(gg)
gg = rep(0, 30)
for (i in 1:30){
gg[i] = gower.dist(t(as.matrix(c(i, 1, 2))),
t(as.matrix(c(31.0, 1, 2))),
KR.corr = T)
}
plot(gg)
gg
gower.dist
gg = rep(0, 30)
for (i in 1:30){
a = t(as.matrix(c(i, 1)))
b = t(as.matrix(c(31.0, 1)))
gg[i] = gower.dist(a,
b,
KR.corr = T)
}
plot(gg)
gg
gg = rep(0, 50)
for (i in 1:50){
a = t(as.matrix(c(i, 1)))
b = t(as.matrix(c(31.0, 1)))
gg[i] = gower.dist(a,
b,
KR.corr = T)
}
plot(gg)
print('Cocouc')
# Première question
print('Coucou')
# Première question
print('Coucou')
help('print')
# Question 2)
# Question 2)
220 - 27
age <- 220 - 27
age <- 211 - 0.5 * 27
age
[1] 197.5
# Question 2)
age = 220 - 27
age <- 211 - 0.5 * 27
age
#[1] 197.5
#[1] 197.5
# Question 3)
rep('H', 4)
while (T){}
while (T){print(1)}
library(tidyverse)
library(gapminder)
install.packages(gapminder)
install.packages('gapminder')
read.csv('C:/Users/rfuchs/Desktop')
library('gapminder')
gapminder %>%
filter(year %in% c(1957,1987,2007)) %>%
ggplot(aes(x=continent, y=lifeExp, fill=factor(year))) +
geom_boxplot()
gapminder
read.csv('C:/Users/rfuchs/Downloads')
read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
gapminder %>%
filter(year  %>%
ggplot(aes(x=continent, y=lifeExp, fill=factor(year))) +
geom_boxplot()
)
gapminder %>%
filter(year ) %>%
ggplot(aes(x=continent, y=lifeExp, fill=factor(year))) +
geom_boxplot()
gapminder %>%
year %>%
ggplot(aes(x=continent, y=lifeExp, fill=factor(year))) +
geom_boxplot()
year
gapminder$year
Model
df
df %>%
filter(Model  %in% c('Unobserved 1','Unobserved 2','Unbalanced  1', 'Unbalanced 2')) %>%
ggplot(aes(x=continent, y=lifeExp, fill=factor(year))) +
geom_boxplot()
df
df %>%
filter(Model  %in% c('Unobserved 1','Unobserved 2','Unbalanced  1', 'Unbalanced 2')) %>%
ggplot(aes(x=Method, y=Energy, fill=factor(Model))) +
geom_boxplot()
df %>%
filter(Model  %in% c('Unobserved 1','Unobserved 2','Unbalanced 1', 'Unbalanced 2')) %>%
ggplot(aes(x=Method, y=Energy, fill=factor(Model))) +
geom_boxplot()
df %>%
filter(Method %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Model))) +
geom_boxplot()
df %>%
filter(Model %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Method, y=Energy, fill=factor(Model))) +
geom_boxplot()
df %>%
filter(Model %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Method, y=Energy, fill=factor(Model))) +
geom_boxplot()
df %>%
filter(Model %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Method, y=Energy)) +
geom_boxplot()
df %>%
filter(Model %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Method, y=Energy)) +
geom_boxplot()
df %>%
filter(Model %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Method, y=Energy)) +
geom_boxplot()
df %>%
filter(Model  %in% c('Unobserved 1','Unobserved 2','Unbalanced 1', 'Unbalanced 2')) %>%
ggplot(aes(x=Method, y=Energy, fill=factor(Model))) +
geom_boxplot()
df$Model
df %>%
filter(Method %in% c('MIAMI','CTGAN','CART', 'RF', 'SYNTH')) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Model))) +
geom_boxplot()
df$Method
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Model))) +
geom_boxplot()
factor(Model)
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Method))) +
geom_boxplot()
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Method))) +
geom_boxplot(order = c())
factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Model, y=Energy, fill=factor(Method))) +
geom_boxplot(order = c())
colnames(df)
df[,1:length(df)]
df = df[,1:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = df[,1:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
geom_boxplot()
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = df[,1:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = df[,1:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df$Method
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = df[,1:length(df)]
df
colnames(df) <- c('Design', 'Method', 'Energy')
df
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df
df[,1:length(df)]
df[,2:length(df)]
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df$Design <- factor(df$Design, level = c("Unbalanced 1" "Unbalanced 2" "Unobserved 1" "Unobserved 2"))
df$Design
factor(df$Design, level = c("Unbalanced 1" "Unbalanced 2" "Unobserved 1" "Unobserved 2"))
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df$Design <- factor(df$Design, level = c("Unbalanced 1", "Unbalanced 2", "Unobserved 1", "Unobserved 2"))
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
geom_boxplot()
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
geom_boxplot(col=c(1:6))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
geom_boxplot(col=c(2:6))
df %>%
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method), col=c(2:6))) +
geom_boxplot()
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method), col=c(2:6))) +
geom_boxplot()
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method), col=c(2:6))) +
geom_boxplot()
c(2:6)
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method), color=c(2:6))) +
geom_boxplot()
levels(df$Design)
levels(df$Design) <- c('Unbalanced bivariate', 'Unbalanced trivariate', 'Absent bivariate', 'Absent trivariate')
df
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
geom_boxplot()
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
labs(fill = "Method") +
geom_boxplot()
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df$Design <- factor(df$Design, level = c("Unbalanced 1", "Unbalanced 2", "Unobserved 1", "Unobserved 2"))
levels(df$Design) <- c('Unbalanced bivariate', 'Unbalanced trivariate', 'Absent bivariate', 'Absent trivariate')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df$Method
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = df[,2:length(df)]
colnames(df)
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=MAE, fill=factor(Method))) +
labs(fill = "Method") +
geom_boxplot()
df
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'MAE')
df$Design <- factor(df$Design, level = c("Unbalanced 1", "Unbalanced 2", "Unobserved 1", "Unobserved 2"))
levels(df$Design) <- c('Unbalanced bivariate', 'Unbalanced trivariate', 'Absent bivariate', 'Absent trivariate')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=MAE, fill=factor(Method))) +
labs(fill = "Method") +
geom_boxplot()
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'MAE')
df$Design
df = read.csv('C:/Users/rfuchs/Downloads/energy.csv')
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'Energy')
df$Design <- factor(df$Design, level = c("Unbalanced 1", "Unbalanced 2", "Unobserved 1", "Unobserved 2"))
levels(df$Design) <- c('Unbalanced bivariate', 'Unbalanced trivariate', 'Absent bivariate', 'Absent trivariate')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=Energy, fill=factor(Method))) +
labs(fill = "Method") +
geom_boxplot()
df = read.csv('C:/Users/rfuchs/Downloads/proportion.csv')
df = df[,2:length(df)]
colnames(df) <- c('Design', 'Method', 'MAE')
df$Design <- factor(df$Design, level = c("Unbalanced 1", "Unbalanced 2", "Unobserved 1", "Unobserved 2"))
levels(df$Design) <- c('Unbalanced bivariate', 'Unbalanced trivariate', 'Absent bivariate', 'Absent trivariate')
df$Method <- factor(df$Method, level = c("MIAMI","CTGAN","CART", "RF", "SYNTH"))
df %>%
filter(Method %in% c("MIAMI","CTGAN","CART", "RF", "SYNTH")) %>%
ggplot(aes(x=Design, y=MAE, fill=factor(Method))) +
labs(fill = "Method") +
geom_boxplot()
help(var)
install.packages("effects")
survived <- Titanic$survived
data("Titanic")
survived <- Titanic$survived
class <- Titanic$passengerClass
obs123 <- table(survived, class)
obs123
install.packages("carData")
data("TitanicSurvival")
data("TitanicSurvival")
data("titanic3 ")
data("titanic3")
summary(TitanicSurvival)
library('carData')
data("TitanicSurvival")
TitanicSurvival
colnames(TitanicSurvival)
TitanicSurvival$survived
install.packages("carData")
library('carData')
data("TitanicSurvival")
Titanic = data.frame(TitanicSurvival)
data("TitanicSurvival")
Titanic
data("TitanicSurvival")
Titanic
library('carData')
data("TitanicSurvival")
Titanic$Survived
Titanic
TitanicSurvival
TitanicSurvival
TitanicSurvival$Class
colnames(TitanicSurvival)
class <- Titanic$passengerClass
Titanic
class(Titanic)
Titanic = data.frame(TitanicSurvival)
Titanic
class <- Titanic$passengerClass
class
Titanic$survived
survived <- Titanic$survived
class <- Titanic$passengerClass
obs123 <- table(survived, class)
obs123
res123 <- chisq.test(obs123, corr=F)
help(chisq.test)
res123 <- chisq.test(obs123, corr=F)
res123$expected
res123
Genre <- Titanic$sex
Genre <- Titanic$sex
Genre <- as.character(Genre)
Titanic$age
dropna(Titanic)
drop.na(Titanic)
is.na(Titanic)
is.na(Titanic$sex)
~is.na(Titanic$sex)
!(is.na(Titanic$sex))
Titanic[!(is.na(Titanic$sex)),]
length(Titanic[!(is.na(Titanic$sex)),])
dim(Titanic[!(is.na(Titanic$sex)),])
dim(Titanic)
Titanic$sex
Titanic$sex
Genre <- Titanic$sex
Titanic = data.frame(TitanicSurvival)
dim(Titanic)
Genre <- Titanic$sex
Genre <- as.character(Genre)
Genre[ Titanic$age < 15 ] <- "child"
Genre <- as.factor(Genre)
summary(Genre)
library(scales)
library(grid)
library(RColorBrewer)
library(devtools)
library(ComplexHeatmap)
library(tidyr)
# Change the path with yours
setwd('C:/Users/rfuchs/Documents/GitHub/rubaliz_paper/Results/integration')
x<-read.csv('Cbudget.csv', sep=';', header = T)
x <- x[,c('METHOD', 'Station', 'Discrepancy')]
#x<-as.data.frame(x)
mat<-x %>% pivot_wider(
names_from = METHOD,
values_from = Discrepancy
)
mat2=mat[,2:8]
heat <- scale(t(mat2))
colnames(heat)=mat$Station
#row.names(heat)=mat$Station
ComplexHeatmap::Heatmap(heat,cluster_columns =FALSE,
cluster_rows =FALSE,
heatmap_legend_param = list(direction = 'vertical',
title ='Z-scores', grid_width = unit(0.5, 'cm'), grid_height = unit(0.5, 'cm')
))#, heatmap_legend_param = list(direction = “vertical”,  title =“Z-scores”, grid_width = unit(1, “cm”), legend_height = unit(3, “cm”)))
